{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPZT9ZgN7fMPABWv6ezSaPJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Q1.Assign your name to variable name and Age to variable Age.Make a python program that prints user name and age"],"metadata":{"id":"-1a5HKQvAqxW"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y8l3ZrBI-hhB","executionInfo":{"status":"ok","timestamp":1685288290412,"user_tz":-330,"elapsed":15467,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"fa657d92-f79e-4ff0-96d5-2cb442f1e3ed"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter your name: Rufaida Shaik\n","Enter your age: 20\n","Your name is: Rufaida Shaik\n","Your age is: 20\n"]}],"source":["name = input(\"Enter your name: \")\n","age = input(\"Enter your age: \")\n","\n","print(\"Your name is:\", name)\n","print(\"Your age is:\", age)\n"]},{"cell_type":"markdown","source":["Q2 X=\"DataSciene is used to extract meaningful insights\" . Split the string"],"metadata":{"id":"aErhZHRFApZB"}},{"cell_type":"code","source":["X = \"DataScience is used to extract meaningful insights\"\n","split_words = X.split()\n","\n","print(split_words)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KpmlWPEuA9Xf","executionInfo":{"status":"ok","timestamp":1685288425831,"user_tz":-330,"elapsed":410,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"1d6c4519-400b-4d81-e8a5-d0cdd60e4fba"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["['DataScience', 'is', 'used', 'to', 'extract', 'meaningful', 'insights']\n"]}]},{"cell_type":"markdown","source":["Q 3 Make a function that gives muktiplication of two numbers\n"],"metadata":{"id":"dzAv0QTCBMiz"}},{"cell_type":"code","source":["def multiply_numbers():\n","    num1 = float(input(\"Enter the first number: \"))\n","    num2 = float(input(\"Enter the second number: \"))\n","    result = num1 * num2\n","    return result\n","# Call the multiply_numbers function\n","product = multiply_numbers()\n","\n","# Print the result\n","print(\"The product is:\", product)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V0jmRGwiBTbJ","executionInfo":{"status":"ok","timestamp":1685288640587,"user_tz":-330,"elapsed":11708,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"2da4bd6c-29b4-4143-c9c5-275c28b86c39"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the first number: 20\n","Enter the second number: 2\n","The product is: 40.0\n"]}]},{"cell_type":"markdown","source":["Q4 Create a Dictionary of 5 States with their capitals,also prinnt the keys and values"],"metadata":{"id":"Db5b_A8aB-6j"}},{"cell_type":"code","source":["states = {\n","    \"California\": \"Sacramento\",\n","    \"New York\": \"Albany\",\n","    \"Texas\": \"Austin\",\n","    \"Florida\": \"Tallahassee\",\n","    \"Illinois\": \"Springfield\"\n","}\n","\n","# Print keys\n","print(\"States:\")\n","for state in states.keys():\n","    print(state)\n","\n","# Print values\n","print(\"\\nCapitals:\")\n","for capital in states.values():\n","    print(capital)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZnC1bUwWB6zy","executionInfo":{"status":"ok","timestamp":1685288733070,"user_tz":-330,"elapsed":406,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"b9baf270-c9f0-40dc-add9-5936ae6b4539"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["States:\n","California\n","New York\n","Texas\n","Florida\n","Illinois\n","\n","Capitals:\n","Sacramento\n","Albany\n","Austin\n","Tallahassee\n","Springfield\n"]}]},{"cell_type":"markdown","source":["Q5 Create a list of 1000 numbers using range function\n"],"metadata":{"id":"2JBhBr49C9Vh"}},{"cell_type":"code","source":["numbers = list(range(1, 1001))\n","print(numbers[:10])  # Print the first 10 numbers\n","print(numbers[-10:])  # Print the last 10 numbers\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0bpfEhqUCg-I","executionInfo":{"status":"ok","timestamp":1685288940383,"user_tz":-330,"elapsed":416,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"6598b0c8-93e2-44b1-e2b9-d5451a0c5ea1"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","[991, 992, 993, 994, 995, 996, 997, 998, 999, 1000]\n"]}]},{"cell_type":"markdown","source":["Q6 Create an identity matrix of dimension of 4 by 4"],"metadata":{"id":"7y7SPK80DK7G"}},{"cell_type":"code","source":["identity_matrix = [[1 if i == j else 0 for j in range(4)] for i in range(4)]\n","for row in identity_matrix:\n","    print(row)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UThYZRsNDejD","executionInfo":{"status":"ok","timestamp":1685289056603,"user_tz":-330,"elapsed":401,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"c9d49f13-9d05-445f-bffb-ac40633082a6"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 0, 0, 0]\n","[0, 1, 0, 0]\n","[0, 0, 1, 0]\n","[0, 0, 0, 1]\n"]}]},{"cell_type":"markdown","source":["Q7 Create a 3x3 matrix with values ranging from 1 to 9"],"metadata":{"id":"ESosVJM8Dlxd"}},{"cell_type":"code","source":["matrix = []\n","for i in range(3):\n","    row = []\n","    for j in range(3):\n","        value = int(input(\"Enter a value for position ({}, {}): \".format(i, j)))\n","        row.append(value)\n","    matrix.append(row)\n","for row in matrix:\n","    print(row)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ridJPjNTDwRj","executionInfo":{"status":"ok","timestamp":1685289229251,"user_tz":-330,"elapsed":12450,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"565738bf-efb8-4b0f-fba8-e31475503e87"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a value for position (0, 0): 1\n","Enter a value for position (0, 1): 2\n","Enter a value for position (0, 2): 3\n","Enter a value for position (1, 0): 4\n","Enter a value for position (1, 1): 5\n","Enter a value for position (1, 2): 6\n","Enter a value for position (2, 0): 7\n","Enter a value for position (2, 1): 8\n","Enter a value for position (2, 2): 9\n","[1, 2, 3]\n","[4, 5, 6]\n","[7, 8, 9]\n"]}]},{"cell_type":"markdown","source":["Q 8 Create two similar dimensional array and perform sum on them"],"metadata":{"id":"soD7onllDvid"}},{"cell_type":"code","source":["import numpy as np\n","\n","# Create two arrays\n","array1 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n","array2 = np.array([[10, 11, 12], [13, 14, 15], [16, 17, 18]])\n","\n","# Perform element-wise addition\n","result = array1 + array2\n","\n","# Print the result\n","print(\"Array 1:\")\n","print(array1)\n","print(\"\\nArray 2:\")\n","print(array2)\n","print(\"\\nResult of addition:\")\n","print(result)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZdDe31h7E4IR","executionInfo":{"status":"ok","timestamp":1685289408383,"user_tz":-330,"elapsed":666,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"7526d427-9543-4c65-a3f8-5ba83fb22b18"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Array 1:\n","[[1 2 3]\n"," [4 5 6]\n"," [7 8 9]]\n","\n","Array 2:\n","[[10 11 12]\n"," [13 14 15]\n"," [16 17 18]]\n","\n","Result of addition:\n","[[11 13 15]\n"," [17 19 21]\n"," [23 25 27]]\n"]}]},{"cell_type":"markdown","source":["Q9 Generate the series of dates from 1st feb,2023 to 1st march 2023(both inclusive)\n"],"metadata":{"id":"CJYqAn1wE9YJ"}},{"cell_type":"code","source":["import datetime\n","\n","start_date = datetime.date(2023, 2, 1)\n","end_date = datetime.date(2023, 3, 1)\n","delta = datetime.timedelta(days=1)\n","\n","current_date = start_date\n","while current_date <= end_date:\n","    print(current_date)\n","    current_date += delta\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-XXoZ8nFJCJ","executionInfo":{"status":"ok","timestamp":1685289510547,"user_tz":-330,"elapsed":513,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"9059ce1d-86ac-4da7-e8b0-38a9ab12fdb3"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["2023-02-01\n","2023-02-02\n","2023-02-03\n","2023-02-04\n","2023-02-05\n","2023-02-06\n","2023-02-07\n","2023-02-08\n","2023-02-09\n","2023-02-10\n","2023-02-11\n","2023-02-12\n","2023-02-13\n","2023-02-14\n","2023-02-15\n","2023-02-16\n","2023-02-17\n","2023-02-18\n","2023-02-19\n","2023-02-20\n","2023-02-21\n","2023-02-22\n","2023-02-23\n","2023-02-24\n","2023-02-25\n","2023-02-26\n","2023-02-27\n","2023-02-28\n","2023-03-01\n"]}]},{"cell_type":"markdown","source":["Q10 Given a dictionary convert it to corresponding dataframe and display it\n","dictionary  = ['Brand':[''Maruti','Renault',''Hyundai],'Sales':[250,200,240]"],"metadata":{"id":"vwjM4UQFFVpg"}},{"cell_type":"code","source":["import pandas as pd\n","\n","data = {\n","    'Brand': ['Maruti', 'Renault', 'Hyundai'],\n","    'Sales': [250, 200, 240]\n","}\n","\n","df = pd.DataFrame(data)\n","print(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i3QMqhUKF-z7","executionInfo":{"status":"ok","timestamp":1685289698240,"user_tz":-330,"elapsed":1890,"user":{"displayName":"SHAIK RUFAIDA 20MIS7001","userId":"17450837860526681055"}},"outputId":"2ee7afb9-7d24-44ff-a46e-0330309435e7"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["     Brand  Sales\n","0   Maruti    250\n","1  Renault    200\n","2  Hyundai    240\n"]}]}]}